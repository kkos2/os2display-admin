// Convert points to px. The design from KFF came with pts.
@function pt2Px($pt) {
  @return 0px + ($pt * 96 / 72);
}

// Convert points to %. The design from KFF came with pts.
@function pt2pct($pt) {
  @return 0% + ($pt * 100 / 12);
}

// https://css-tricks.com/books/volume-i/scale-typography-screen-size/
@mixin stretchyEms($property, $min, $max) {
  #{$property}: calc(
    #{$min}em + (#{$max} - #{$min}) * ((100vw - 300px) / (1920 - 300))
  );
}
// https://css-tricks.com/books/volume-i/scale-typography-screen-size/
@mixin stretchyPx($property, $min, $max) {
  #{$property}: calc(
    #{$min}px + (#{$max} - #{$min}) * ((100vw - 300px) / (1920 - 300))
  );
}

@mixin scalableFont($min, $max) {
  @include stretchyPx('font-size', $min, $max);
  .half-split & {
    @include stretchyPx('font-size', $min/2.5, $max/2.5);
  }
}

@import 'colors';
@import 'typography';
@import 'logo';
@import 'slides';

// This will be compiled to all style sheets, but there is no way to reuse smarter.
.kk-backend-data-error {
  background-color: deeppink;
  color: white;
  text-align: center;
  font-size: 0.8em;
  padding: 0.2em;

  .create-slide--content-inner & {
    font-size: 1.2em;
    padding: 0.5em;
  }
}
